<?xml version="1.0"?>
<project name="AntExample" default="compile"
	xmlns:ivy="antlib:org.apache.ivy.ant">

	<property environment="env" />

	<property name="src.main.java.dir" value="src/main/java" />
	<property name="build.dir" value="build" />
	<property name="build.java.dir" value="${build.dir}/classes" />
	<property name="lib.dir" value="lib" />
	<property name="lib.junit.dir" value="${lib.dir}" />
	<property name="src.test.java.dir" value="src/test/java" />
	<property name="build.test.dir" value="${build.dir}/test-classes" />
	<property name="build.result.dir" value="${build.dir}/result" />
	<property name="build.result.test.dir" value="${build.result.dir}/test" />

	<!-- classpath -->
	<path id="base.classpath">
	</path>

	<path id="test.classpath">
		<fileset dir="${lib.junit.dir}" includes="*.jar" />
	</path>

	<!-- properties for ivy -->
	<property name="ivy.version" value="2.2.0" />
	<property name="ivy.dir" value="lib_ivy" />
	<property name="ivy.jar" value="ivy-${ivy.version}.jar" />

	<!-- ivyが存在するかチェックする -->
	<target name="check.ivy.exist">
		<available file="${ivy.dir}/${ivy.jar}" property="skip.download.ivy" />
	</target>

	<!-- ivyが存在しない場合、ivyをダウンロード -->
	<!-- unless属性に設定されているプロパティが存在する場合、実行しない  -->
	<target name="download.ivy" depends="check.ivy.exist" unless="skip.download.ivy">
		<mkdir dir="${ivy.dir}" />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/${ivy.jar}"
			dest="${ivy.dir}/${ivy.jar}" />
	</target>

	<!-- ivy用のタスクを設定 -->
	<target name="def.antlib" depends="download.ivy">
		<path id="ivy.lib.dir">
			<fileset dir="${ivy.dir}" includes="*.jar" />
		</path>
		<taskdef uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.dir" />
	</target>

	<!-- ivy.xmlを基にivyで依存関係を解決 -->
	<target name="resolve" depends="def.antlib">
		<ivy:retrieve />
	</target>

	<target name="clean">
		<delete dir="${lib.dir}" />
		<delete dir="${ivy.dir}" />
		<delete dir="${build.dir}" />
	</target>

	<target name="init">
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.java.dir}" />
		<mkdir dir="${build.test.dir}" />
		<mkdir dir="${build.result.dir}" />
	</target>

	<target name="compile" depends="init,resolve">
		<javac destdir="${build.java.dir}" encoding="utf-8" includeAntRuntime="off">
			<!-- includeAntRuntime Ant自身が持つclasspathを無効に -->
			<src path="${src.main.java.dir}" />
			<classpath refid="base.classpath" />
		</javac>
		<echo>run compile</echo>
	</target>

	<target name="test-compile" depends="compile">
		<javac destdir="${build.test.dir}" encoding="utf-8" includeAntRuntime="off">
			<src path="${src.test.java.dir}" />
			<!-- refid 事前に定義したパス類似構造（path）を参照する -->
			<classpath refid="test.classpath" />
			<!-- location 単一のディレクトリを指定 -->
			<classpath location="${build.java.dir}" />
		</javac>
	</target>

	<target name="test" depends="test-compile">
		<delete dir="${build.result.test.dir}" />
		<mkdir dir="${build.result.test.dir}" />

		<junit>
			<classpath location="${build.test.dir}" />
			<classpath location="${build.java.dir}" />
			<classpath refid="test.classpath" />

			<formatter type="xml" />
			<batchtest todir="${build.result.test.dir}">
				<fileset dir="${build.test.dir}" />
			</batchtest>
		</junit>

		<junitreport todir="${build.result.test.dir}">
			<fileset dir="${build.result.test.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="noframes" todir="${build.result.test.dir}" />
			<!-- format frames or noframes -->
		</junitreport>
	</target>
</project>
